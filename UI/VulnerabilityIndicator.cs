using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
public class VulnerabilityIndicator : MonoBehaviour {
    public Image vulnerabilityIndicator;
    private bool showVulnerabilityIndicator;
    private bool blinkImage;
    private float vulnerabilityIndicatorTimer;
    public float zoomTime;
    public Color colorMain;
    public Color colorFlash;

    public void Enable() {
        StartIndicator();
    }
    public void Disable() {
        StopIndicator();
    }
    public void StartIndicator() {
        showVulnerabilityIndicator = true;
        vulnerabilityIndicatorTimer = 0;
    }
    public void StopIndicator() {
        showVulnerabilityIndicator = false;
    }
    public bool IsVisible() {
        return showVulnerabilityIndicator;
    }

    void Update() {
        if (showVulnerabilityIndicator) {
            if (blinkImage) {
                vulnerabilityIndicator.enabled = false;
            } else {
                vulnerabilityIndicator.enabled = true;
            }
            vulnerabilityIndicatorTimer += Time.fixedDeltaTime;
            UpdateIndicatorSize(vulnerabilityIndicatorTimer);
        } else {
            vulnerabilityIndicator.enabled = false;
            vulnerabilityIndicatorTimer = 0;
        }
    }

    void UpdateIndicatorSize(float time) {
        if (time < 0.5) {
            Vector2 size = new Vector2(50f, 50f);
            SetSize(size);
        } else if (time < 1) {
            Vector2 size = new Vector2(35f, 35f);
            SetSize(size);
        } else {
            Vector2 size = new Vector2(25f, 25f);
            SetSize(size);
        }
    }

    void SetSize(Vector2 size) {
        if (vulnerabilityIndicator.rectTransform.rect.size != size) {
            StartCoroutine(BlinkImage());
        }
        vulnerabilityIndicator.rectTransform.sizeDelta = size;
    }

    public IEnumerator BlinkImage(float blinkInterval = 0.05f) {
        blinkImage = true;
        float blinkTimer = 0;
        while (blinkTimer < blinkInterval) {
            blinkTimer += Time.unscaledDeltaTime;
            yield return null;
        }
        blinkImage = false;
    }
}
