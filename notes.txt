normal shadowpass

v2f vert(appdata_base v)
            {
                v2f o;
                TRANSFER_SHADOW_CASTER_NORMALOFFSET(o)
                return o;
            }

just do your custom vertices before that and it will work:

v2f vert(appdata_base v)
            {
                float4 worldPos = mul(_Object2World, v.vertex);
                // do stuff to worldPos.xyz
                v.vertex = mul(_World2Object, worldPos);
                v2f o;
                TRANSFER_SHADOW_CASTER_NORMALOFFSET(o)
                return o;
            }

here, he is turning the vertices to world coordinates and then back to object coordinates.
_Object2World is M matrix as I understand it.
so we're taking model coordinates * M to get their position in world space.

TRANSFER_SHADOW_CASTER_NORMALOFFSET

#define TRANSFER_SHADOW_CASTER_NOPOS(o,opos) 
o.vec = mul(unity_ObjectToWorld, v.vertex).xyz - _LightPositionRange.xyz; 
opos = UnityObjectToClipPos(v.vertex);

so transfer shadow caster is taking object to world coordinates for the light position calculation,
then it sets position to UnityObjectToClipPos
This is the equivalent of mul(UNITY_MATRIX_MVP, float4(pos, 1.0)), and should be used in its place.

so clearly, TRANSFER_SHADOW_CASTER is assuming model vertices coordinates.

very similar to our billboard code, but the major difference is that in the sprite renderer,
we start from model vertices and want to end on clip coordinates, so we basically do
MVP * vertices
with some modification for billboarding

in the shadow caster example it's not as simple. we instead must start from model coordinates,
modify them to billboard, then return to model coordinates.


       M       V          P
model -> world -> camera -> clip space


possibility 1: do TRANSFER_SHADOW_CASTER_NORMALOFFSET manually with billboarding enabled.
possibility 2: perform some sort of billboarding in world space or whatever, then transform back.

billboard:

float xscale = length(unity_ObjectToWorld._m00_m10_m20);

float4 view = mul(
                UNITY_MATRIX_MV, 
                float4(0, vertex.y, 0.0, 1.0)
            ) + float4(vertex.x * xscale, 0.0, 0.0, 0.0);

pos = mul(
    UNITY_MATRIX_P, 
    view 
);

why does this work at all? we are basically multiplying the x coordinate straight from model to clip

✓ reformulate in 64x64
    ✓ new sprites
        ✓ base
        ✓ pistol
        ✓ smg
        ✓ shotgun
        ✓ rifle
    ✓ new models: not necessary
    ✓ new textures
        ✓ windows
        ✓ street parking sign
        ✓ gibs 
        ✓ shells
        ✓ decals
        ✓ newspaper stand
        ✓ sidewalk
        ✓ pc tower / monitor
        ✓ fence
        ✓ meter wires
        ✓ emission map

UI initiative
    probably i want pixelated / animated lines and callouts

interactible
    press F to interact with nearest 
    UI call-out of F action

how can we highlight when an object is near?
    needs to detect objects in range and sort by priority
        is this a case for a tag?
        a trigger collider, masked to collide with only certain layer objects
        what about don't hide interlopers?
    UI needs to bind to interactor

broadly:
interactive interface is in place.
we next need to think about how hacking interacts with this system.

* graphics
    pass 2 of base template
    security guard
    face
* UI   
    better gun / item graphics
* hacking
    networks / gateways / endpoints
    UI overlay
    clarity 
* level parameters
    sound effects, camera defaults, etc.
    scenes
    objectives
* system
    main menu
    game start
    game load
    settings
* entities
    baddies
    civilians
    robots
    AI
* more environment



time to speculate on some new gameplay beats. try to narrow in on what drew me to this idea.
overall theme possibilities:
    1. realistic B&E simulator. buildings have realistic utilities, firefighter access, security grids, physical security. you need specialized tools and tactics to get around.
    2. modern setting / cyberpunk setting / sci-fi setting
        shadowrun SNES: alleyways, brick buildings
    3. stealth ninja
        stealth kills with sword, knife, etc.
    4. whatever DJ1 was
            DJ1 was: flat concrete plains with small buildings dotting it. like military compounds.
            instead we want:
                self contained small office tower (say 3 story building) with interior, exterior, multiple insertion / extraction points.

inspo:
    ghost in the shell

the basic loop: do missions, earn credits, buy upgrades, do harder missions
    some very hard missions might be available early on, technically doable with pure stealth?

an alarm is triggered and the street fills up with private securiy swat response team (configurable offsite secutiy detail per level)
    the team lines up outside and then breaches through main entrance
an alarm is triggered and shutter doors descend, corridor fills with gas, turrets pop out of walls

you sneak through a ventilation airduct until you're above the conference room containing your target, bypassing the security detail and locked door outside.
you drop down through the vent and quickly dispatch everyone inside with throwing stars and nanoblade katana. the guards outside the door hear nothing and you commence extraction.
outside the window, the city night twinkles like fireflies in the darkness. your home is down there: safely in the shadows.

breaching a conference room, shooting the target with delayed-explosive tip flechettes

shellfish toxin flechettes / needlegun

you plant remote detonation explosives outside a wall in the alley way first thing, so that you'll have a quick escape route later. after you have completed the mission objectives, security is closing in:
so you hit the detonator and make for the hole in the wall.

planting explosives or a simulator / distractor outside, to draw the security team away from your target.

a team of two men in hazmat suits carry a radioactive thing through a cleanroom hallway

MI CIA NOC list sequence (disguise, trigger alarms, distract, track, etc.)

at the first sign of trouble, a team of bodyguards shove the VIP into a bulletproof limo and then take defensive positions

you approach a smart gas meter. interact brings up a live close-up cam with greater detail. you use a toolbox of tools to unscrew faceplates,
snip wires, attach hacking gizmos, enter the network, etc.

randomized missions

hack or tap security system to get a UI feed of their info & actions

shooting out a fine wire zipline into the neck of a distracted robot to upload a stun program that disables it temporarily

remote hacker handles hacking things for you
a fence for handling stolen goods & data

ransacking storage for valuable equipment?

overall, a sense of *precision and detail*

something like: hitman, but *not* scripted predetermined bullshit! instead, planning ahead, using an array of tools, realistic tactics, planning entrance and escape routes,
using what you've unlocked to access better ingress points (grapple gun, dropship), in a sort of immersive sim that takes care of realistic response to your actions.
each time it unfolds differently.
realistic security response.
    * something is amiss on the secutity cam (body, missing guard)
    * a guard has been out of communication for some time
    * perimiter alarm has been triggered

ironman mode?
abort mission?



incongruities with vision:
1. control 
    feels too loose?
    sticky controls: actual unity bug, submit bug report
2. shadows
    shadows should be more congruent with expected feel
    shadows on sprite should be darker
    easy to hide in, like thief
        use shadowprobe to create a transparent overlay?
        prevents nice dynamic shadows / light effects?
    i want deep shadows near planters and structures
        dark, gritty
        shadows don't apply correctly
        shadow probe doesnt change much in dark regions
    post-processing: increase contrast? dynamic?

head:
1. clamp head angle
2. don't apply head angle when moving
3. hide during forbidden animations
4. adjust gun spritesheets



ENUM            clamp       result
0 - left                    0
1 - leftup      X           1 <- clamp
2 - up                      2
3 - rightup                 3 <- upper
4 - right                   3
5 - rightdown               3/7
6 - down                    7
7 - leftdown                7 <- lower (-1)

7 - 4 = 3
3 / 2 = 1.5


ENUM            clamp       result
0 - left                    2/6
1 - leftup                  2
2 - up                      2 <- lower
3 - rightup                 3
4 - right       X           4 <- clamp
5 - rightdown               5
6 - down                    6 <- upper
7 - leftdown                6



ENUM            clamp       result
0 - left         X          0 <- clamp
1 - leftup                  1
2 - up                      2 <- upper
3 - rightup                 3
4 - right                   3/6
5 - rightdown               6
6 - down                    6 <- lower
7 - leftdown                7


next major branches to work on:

NPCs
    sphere robot
    basic civilians
        hands up pose
        animation temp frame
            hand interact pose
        damage
        gibbing
interactives
    PIP camera for panel interactions system
        take control mode
        layer visible only to cinematic camera
        camera lerp in / out on enter/exit
        UI contains PIP camera while active
        modular interactive panel system
            tool kit
                screwdriver, lockpicks, wire cutters, cyberdeck
            open up panel
            wires to cut
            data port to tap
            physical locks
            variable effects
                overload, bypass, reroute, etc.
                terminator-style hack card for ATM
environmental systems
    power
        lights, various gadgets receive power / no power
        dynamic lights / instanced material emission
        backup generator
        mains connection / transformer
        underground cables / steam tunnels
        UI representation of power network?

    network
        hacking system
            WAN / cloud connection on map
        allow hacking over networks
        routers / portals
        firewalls
        ICE
    alarms / video feed ?
    water / fire suppression ?

    represent the connections physically in-game
        automatically represent the connectors as meshes in-game?
        different vision modes can reveal infrastructure connections
        connections are severed when wall explodes
            water pipes spill water
            network connections severed
police / security response


camera
broadly, inputs are created depending on state, then camera applies input by lerping


1. on power change
2. power source on / off
3. easier way to hook up power grids
4. power grid UI layer
    iconography

Under the name ‘Livre des figures hiéroglyphiques’ The depictions were meant to be painted on an arch in Cimetière des Innocents. 
These depictions were inspired by the “strange figures” engraved in the mysterious manuscript that helped Flamel on the quest for the Philosopher’s Stone.


onpowergraphchange is not registered when level starts.


does everything connect back everywhere back to a single mains connection?
or do we implement several smaller connected graphs within each scene
    this is more game-like

how did i envision the transformer connecting to the mains connection?
normal nodes in the network do not block transmission when they are destroyed, otherwise blowing up a gun turret might take out lights.
but, i do want blowing up the transformer to take out the lights.
so there is a distinction:
    * regular node
    * distribution node 
    * switch
    * mains

how do i envision "power map view"?
    a separate view superimposed over the scene
    in analogy with similar views: network, water, sensor nets
    when the view is active, mouse over components to view their information
        * power: on / off
        * enabled: yes / no
        * information: when this node is disabled, it will no longer distribute power to connected components
    mouse becomes a cursor
        this is important for network / hacking view, too
    is there a better / more visual / more intuitive way to represent the flow of power then?
        simple connections in the network are not sufficient?
        or else: all connections *are* power connections. no serial between disconnected nodes.
            in other words, go back to the original design of nodes interrupting power flow
            this design will be very spoke & wheel
            we can always move the lines around
    when does the view activate?


is there an exclusive cursor mode when the item is deployed?
    cyberdeck yes, AR goggles no?
    how to communicate to player that they can't shoot now?

design for cyber networks
    does hack originate from offscreen, as original idea?
        that was so that you could hack the building before going in.
        could offer a chanc


separate the player input / character controller setinput into interfaces
the other part of this code is pushing updates to animation - we can refactor this to use MVC / binding

unify sphereRobotAnimation and DirectionalBillboard
flip x in directional billboard

* head alignment
* wallpress camera alignment
* manual hacker
* fix binding to global player object
* wallpress zoom out
* jump controller

during slew time:
    turn to look
    don't shoot

searching:

1. looking in a direction versus searching a point
2. time evolution

looking in a direction:
    1. slew / look in direction
    2. look left, look right
    3. move some distance from original point towards the direction
    4. arrive at location, stop
    5. look left, look right

searching a location
    1. slew / look towards location
    2. move to location
    3. arrive at location
    4. look left, look right
    5. choose a new location near original location
    6. repeat 2-5

radioing to HQ
    1. find cover
    2. move
    3. operate radio
    transition to:
        player location unknown: search
        player location known: attack

we want to queue / schedule several routines in order, with transitions governed by timers or behavior
routines should have an update cycle and a way to check completeness
do we have a routine stack? what about branching?
more complex behavior would have the ability to transition to different routines depending.
    this makes it sound like routine logic controls the transition to the next routine.
    is the routine pushing this information or is it being polled by the state machine?

routine can publish when they are done
routine can publish transition to new state?

Q: levels:
1. individual routines (move, slew, etc)
2. overall state machine states (search direction, search location, radio hq)
3. state machine. time since last seen player, component references

something like: nested structure. update method, complete method
    method can publish finished, or transition to state

overhaul everything to be a behavior tree.
now we have to think: how is perception / sound going to be handled.
    1. use the tree logic and / or to handle perception states
    2. user perceptions to change textures

the question is: what do the state machine states correspond to?
it feels like they should be trees. recast the sequence as tree.


1. task tree updating
2. timed look toward task
3. timed look left / look right
4. retreiving player input from task

timed should become a decorator
use the namespace



major issue:
Evaluate() was the main chained thing that called sub nodes in the tree.
but Evaluate() isn't enough? Evaluate() returns a status, but I also need there to be a current active node 
findable from the root that is in control and returns PlayerInput.

return to using Evaluate()
but now the running node needs to somehow give playerinput
a timer decorator runs the child node and returns Running until time up
sequence is handled by a Sequence node

Evaluate takes a ref value
does Evaluate happen in an Update loop?

possibly, a Reset() mode but resetting can be handled by instantiating new state machine state

1. how to turn navigation etc. into task node

how to handle dynamic state in the behavior tree?
the normal solution seems to be to publish data to/from the tree. this feels clunky to me.
Ref<> is interesting.
TaskStatus<T>
TaskStatus(Owner)

what is the desired behavior?
1. look left, look right, move in. look around. move to a new spot? 
    if a new noise is heard, skip looking and move to that spot.
    how do we retarget? in behavior tree mode, it should look like:
    1. start path search aynchronous, running
    2. when path is found, next in sequence: move to target
    3. if path is not found, failed.

add movement to the root node sequence, but we're already off track:
1. resetting root node resets the entire sequence
2. not easy to retarget position without resetting root node.

how about: stop fighting the jank and use the getstate methods? it is the standard for behavior trees?
1. magic strings
2. unchecked casting (no strong)

TaskNode<T>(T context) where T: TaskNodeContext
then we can pass in 

playerinpu ref might be a bad idea?

now that we have that settled, the question is how to how to arrange the search AI as a behavior tree

the look-around branch is timer controlled. it consists of a sequence of timer controlled look directives.
    when to reset this timer? storing the timer in state allows for resetting? 
    recreating the branch each state change results in look-around loop?
        this is less important, we can have good control over state transition

sequence:
1. pathfind
2. navigate
have a Reset() method

sequence
1. move to key
2. select new random location for key
timer decorator involved?
timer decorator reset with repeater?

clean up and refactor and unify tasks
    unite all move to tasks
    remove reset?
    parent set data?

tune up ai behaviors
    1. add a delay to movement
        1. constantly changing target location while sphere is at old location until location is updated
        2. timer decorator will still be successful on the next time around 
    2. search more locations in noise?
    3. attack


visibility solutions

visibility shadows
    1. we must set texture orientation
    2. applying a shadow to the entire sprite is at odds with nice light effect
    3. combine regular shader and an overlay texture?
visibility rating
    1. use camera / vis probe surface as usual
        problem: shadows don't quite match up with expectations.
        can we make the solution more complex?
    2. use light probe
        problem: only works for baked lightmaps
    3. hand paint texture
        problem: immediacy of editing
        investigate editing texture in editor
        investigate terrain setting
    4. terrain
        can use in-editor painting
        can retrieve texture mix at point
        use this method for 

using terrains seems like an ideal solution for representing ground information
issues:
    1. discrete shadow levels (like thief)
        multiple textures?
        two textures with varying opacity?
            it is hard to control the opacity in editor
            hard to control precise boundaries
        multiple textures
            more work as more textures are added
            can use 3 textures plus overlap:
                shadow, mid, light


if (textureValues[0] > 0)
{
    source.PlayOneShot(GetClip(stoneClips), textureValues[0]);
}
if (textureValues[1] > 0)
{
    source.PlayOneShot(GetClip(dirtClips), textureValues[1]);
}
    

100 * ((0.2126 * 255) + (0.7152 * 255) + (0.0722 * 255))
255
25500 = 100 

100 * ((0.5 * 255) + (0.5 * 255) + (0.5 * 255))
38250


100 * ((0.5 * 255) + (0.5 * 255) + (0.2 * 255))
30600


20 = ++
30 = +++
40 = +++
45 = ++++
60+ = +++++


3 vs 10
B < 10: -
10 < B < 15: +
15 < B < 30: ++
30 < B < 60: +++
60 < B < 80: ++++
80 < B : +++++



set billboard
set albedo = white pixel
set emission
    emission map: single pixel white
    emission color: white + intensity 2
    emissio


1. put suspicion warnings as icons on bottom of screen in line with visibility indicator
    overall color and eye-catch can alert player on the fly


suspicion UI handler binds to GameManager
GameManager publishes when player suspicion changes
this will push updates to the various UI components
this could trigger an outline flash


1. billboarded color outliner
2. handle transitions between suspiciousness 

* fix audio suspicion
* aim & shoot broken
investigate routine
start with suspicion / gunout etc

AI test arena (VR theme)
    dummy targets
player health
loot 


some gun sounds, bullet impacts sound a lot better pitched up

1. new assets
    * AC unit and ducts
    * finish the other building
        * satellite dish
        * antenna
        * rooftop stuff
    wall / fence around level
    blinking red light
    fix the skybox (use blender)
    close skybox

    security camera
    more external boxes
    overhead pipes
    outside computer console

1.5 white interior environment
        office stuff
        trees & bushes
2. new spritesheet for player
    crouch to place C4
    crouch to pickup credstick
    hand graphic throw 
3. spritesheet for 7-11 worker
4. spritesheet for civilians

destructible AC unit
outline issues:
    crouching & head
    wall press scale orientation
* stutter in between  clipin and rack animation
use the same method in rifle as pistol (animation restart) to control fire interval and allow for trailing gunup
wallpress, crouch and gun: head is facing backwards (head always facing left)
question: can we adjust the stance when shooting smg, rifle?
    crouch / tactical?


legs UR idle
legs walking: ensure torso belt
torso unarmed walking: ensure torso belt not present?


1. move camera as we move cursor around
2. point gun once cursor is far enough away
3. right click to enter over the shoulder mode
4. scroll to zoom in and out.


fix wood window bottom
elevator interior
elevator panel
exit signs
stairwell
bathroom

carpet
wallC
wallC window
wallC window pane
desk
wallC front/back issue
chair: from back toward front, legs



1. use standard shader 
    can change opaque to transparent using shaderutils
    then can't use shader to determine distance from camera
2. use custom shader
    then we can use 
    v2f vert (appdata_t v)
    {
        v2f o;
        o.vertex = mul (UNITY_MATRIX_MVP, v.vertex);       
        o.screenPos = ComputeScreenPos(o.vertex);
        return o;
    }
    4th component is distance
    now we must switch between standard shader and custom interloper shader 
    use a standard surf shader and make it transparent


1. everything above player is shadows only.
2. everything between player and camera in a cylinder of radius r is switched to interloper shader.
3. objects closest to player are least transparent.

somehow, lerp the values.
we want to lerp from solid to transparent.
lerp in and lerp out.
to me, suggests that the parameter must be controlled from script, setting a value in the shader.
can we offload any calculation to the shader?
    1. set player world position. let shader calculate distance, occlusion, if above, if between player and camera.
        this is a good idea.
        if we do this, then it could all be done in shader except:
            1. it means everything must use interloper shader
            2. therefore everything using transparent tags means the depth is fucked
            3. therefore we simply must switch between shaders in script.
            4. therefore switching shaders is restricted to the things that should be hidden
            5. therefore hiding logic belongs to script.
    2. set lerping parameter. this is a separate consideration.

3 follows because the shader logic can't switch zwrite / tags on and off.
    functionally this is handled by switching shaders. so it is fundamentally that way.
    therefore we are using different shaders either way.

logic: everything in a cylinder coaxial with camera forward up to player position.

if we really need to, we can switch ceiling occlusion to be done by shader. but then we need:
    transparent shader
    opaque shader
    plant shader ?


1. InvokeRepeating instead of Update. 
2. use spherecollider for ceiling check.
    disable because above: target alpha = 0
3. use cylinder trigger for interloper check.
    disable because interloper: target alpha = decreasing with inverse radius of cylinder.
4. on make apparent:
    target alpha = 1

on change state:
    lerp parameter = 0
on update:
    if 
    lerp parameter += Time.deltaTime

*always lerp between 0 and 1, and use lerp parameter to control alpha.
*don't even lerp. just modify alpha parameter directly in code.


* cylinder collider
* don't fully disappear interloper
* target alpha set by distance



void Start()
 {
     _PlayerPos_ID = Shader.PropertyToID("_PlayerPos");
 }
 
 void Update()
 {
     Shader.SetGlobalVector(_PlayerPos_ID, gameObject.transform.position);
 }

 var target : Camera; function Update() { 
  var n = target.transform.position - transform.position;
  transform.rotation = Quaternion.LookRotation( n ); } 

  transform.rotation = Quaternion.LookRotation(n)

* destructible walls
* destructible computers
* hack network
* fix broken invisibility bug


problem:
target data is created by input controller in a way specific to top-down input.
    it doesn't work for aim, or wallpress
    also weird is the head animation (!) creates target data, separately.
    then target data is created in taskshoot in a totally different way.
the way target data is made should be dependent on state.
    because: in the one case, we are aiming from the camera down to the level, then projecting to a coplanar position with player, then aiming from player;
    in the other case, we are aiming from the camera across the player, toward a plane in front of player. 
    in the third case, we are AI trying to aim at last seen position.
    the only difference is the state we are in.
but if it is part of playerinput, then it can't be dependent on state, and it already is set before character controller.
so: let character controller create the targetdata as required?
this means: remove targetData from playerInput.
    if we do this, gunhandler is not an IInputReceiver.
    it can take playerinput Fire input, but should also take targetdata.
note all the instances of creating an empty PlayerInput only to wrap a targetData.

only things that reference playerinput.Fire.targetData:
    charactercontroller
    robot controller
    taskshoot
    gunhandler

note the robot controller already short-circuits this model. it uses a "shoot immediately" method that is not totally appropriate.

this should be okay.
main problem: the AI model is to pass around a reference to a PlayerInput and modify it as required.
in this sense, playerinput was supposed to be the master input that contained all information.
but it can't be if fire input is state dependent.
solution: pass around an AI input.
    AI input wraps both playerInput and TargetData.
    this is bad: now AI and player are not interchangeable.
by moving targetData calculation to controller, we are mixing model and control.
targetData should be fully determined at input stage, 

counterpoint: leave targetData as part of PlayerInput.
determine it at input stage.
let aim & top-down modes be distinguished in GameManager InputMode.
    but now we're tracking state in: character controller, and game manager.
    what happens when e.g. we enter aim mode but also press on the wall?
    in a single state, these are exclusive. otherwise we need extra logic for tracking all combinations of states in e.g. camera controller.

either gun input is in addition to controller input, or it is part of controller input.
how e.g. will player input work for the sphere robot?
    we can say this is the kind of architecture thing i dont want to worry about in this game but if not, what is the point of unified playerInput?
question: is right click aim a feature of the input (direction i'm heading in) or is it a feature of the character?
i.e. if we control the robot and right click it should enter aim mode right?
    then the camera control should be referencing gamemanager input state, not character state.

* how to fix headAnimation?
* aimindicatorhandler?
* switch back and forth from left / right when cursor pans left / right
* controllability
    * right-click for ove the shoulder aiming
    * camera moves to point toward the aimpoint
* character & head orient in correct direction when aim mode
* shoot toward cursor
* camera a little above, oriented down
* camera moves slightly in direction of cursor
* turn left & right when cursor near the edge ..?


make a real mission. 
    * civilian man
        * draw base
        * draw guns
    * civilian woman
        * draw base
        * draw guns
    1. 7-11 worker sprite
        draw base
        draw guns
    4. security guard
        draw base
        draw guns

fix head
    how to fix head?
    essentially, we want to place the custom head at the appropriate point in each part of the relevant spritesheet.
    1. extend the head spritesheet and export the proper head in the proper position in the spritesheet, like we do with torso / legs.
    2. define a set of data points per frame that define where the head should be, and which head sprite.
        if we hardcode this, then every spritesheet from now to finish has to have the same points or we break compatibility.
        idea: leverage unity editor
            if we can select the torso sprite, then select head sprite and adjust position while seeing in the editor.
            this would be a tool with unity editor code.
            set up the design, then export a data object.
            load the data object with 

it's billboarded. this is the difference between the editor and runtime.
although the character is rotated, we want to de-rotate the sprites.
offset x, y must always be set in the plane normal to the camera. this is why the trick works.
    by turning the transform rotation to that of the camera, we align the plane of the camera. 
    we then set the offset using local transform coordinates: this would work in any order actually.
    we record the world position, then rotate back.

Q: so why does this fail on the wallpress mode? 
    we turn the transform to the camera plane, away from the camera.
    once we rotate back and allow the wallpress to orient, we are faced toward the camera.
    billboarding is disabled, so we are oriented opposite of normal billboard.
Q: why does it work normally?
    we rotate the transform to the camera plane.
    we set the world position of the head to match where it should be during billboard orientation up to projection.
    the transform is rotated to whatever direction it points in.
    the rotation doesn't matter because billboarding is applied and the world positioning simulates the correct offset.
    if the sprite is flipped, the offset is incorrect! so we adjust it at this point.
        it is incorrect because the choice of orientation at the beginning was just the camera plane.
        if sprite renderer is flipped, we could choose the inverse orientation.
Q: what is the proper solution?
    we need a billboard & non-billboard solution?



proposed alarm system
    the way it works is, alarm objects are wired into alarm terminals.
    when an alarm source triggers, it tries to find an alarm terminal.
    if it finds an alarm terminal, it activates the alarm terminal.
    when the alarm terminal activates, it starts a countdown timer of 30s (configurable)
    the alarm terminal is active until the countdown timer reaches 0, then it deactivates.
    if the alarm source or alarm terminal is deactivated or destroyed, the alarm terminal deactivates.
    on alarm graph change, transfer state / refresh UI.
    upon UI refresh, if there is an active alarm terminal, we are in alarm state.
    show the maximum countdown timer of all active alarm terminals.
    guards radio HQ to communicate with a special HQ alarm terminal.
    that terminal can be disabled or destroyed just like all the others. 




moral of the story: use ScriptableObject.Instantiate very sparingly, because it will break references when 
serializing / deserializing.
use it only when you are sure you will not serialize!
if you will serialize, then write a custom JsonConverter.
if you want to make changes to the template, then you should be using a State class with a delta.

        // StringBuilder sb = new StringBuilder();
        // StringWriter sw = new StringWriter(sb);
        // JsonTextReader reader = new JsonTextReader(new StringReader(jsonOut));

shoot interval:
    pistols should be 0.1 or lower
    smg high: 0.15
    limit for automatic: 0.19

aiming wonkiness:
    in aim mode, mouse delta is converted to inputtorque
    in update character rotation, input torque is applied to character rotation, rotating off of y vertical.
    in character camera, in aim mode, now the camera turns to face character direction.
        thus, mouse input torque directly controls the camera.
solution: we want to decouple player direction and camera direction.
    torque should still directly control the camera direction.
    player will slew to face the camera direction while maintaining verticality.
        currentRotation rotates to face cameraRotation while keeping y fixed.
    when entering aim mode, camera direction is player direction.

new problem: camera quickly rotates off-kilter.
    why didn't we have this problem with currentRotation?
    probably because kinematic character controller is smarter than this.
desired properties of solution:
    camera up should be Vector3.up, or at least character up.
how do we define this?
    the quaternion right should be coplanar with character forward and character right.

    quaternion right: camera quaternion * Vector3.right
    project quaternion right into plane:
    public static Vector3 ProjectOnPlane(Vector3 vector, Vector3 planeNormal);
    now rotate camera by Quaternion.FromTo(quaternion right, projected right);

figure out graph load order issues once and for all
    now the basic idea here is that state is held in the graph nodes.
    when we perform actions in the game like hacking a node, we set the node state:
        GameManager.I.SetCyberNodeState(data.node, true);
    this sets the graph state and refreshes the graph:
        node.compromised = state;
        RefreshCyberGraph();

    the complications comes from the fact that we also sometimes need to transfer state from components to graph.
    finally, there are interdependencies. 
        disabling a cyber node activates OnStateChange
    note that setting node enabled / disabled on level load potentially conflicts with setting node enabled when power or cyber changes.


in general, why will missions be a challenge?
    when outmatched in numbers and equipment, stealth is preferred
    especially when NPCs can easily call in back up
        NPCs should shout out to each other when you are spotted
    exfiltration can pose a challenge 
        get in to the base to steal the data, get back out
    navigating automated defenses and alarm systems

optimizing canvases:
CanvasUpdate.Layout
    - Disable pixel perfect
    - Watch out for outline (I have noticed it has a significant effect on execution time, but none on GC alloc)
    - Set fonts to not be dynamic
    - Watch out for tiled ui sprites

increase final texture resolution, and padding potentially for better outline.

IF it is safe to be spotted except when we are doing suspicious stuff, how can I make a level challenging?
    more sensors to trip
    activity builds up into suspicious footprint, ideally by the time you are deep in the building like a trap
    deeper area becomes higher security
    goal involves doing something that will necessarily attract attention (planting explosives, etc)

note: layer "interactive"



* redesign data structure so it can generalize to multiple skins
* make it easier to select the next torso sprite (spritesheet parameter?)
* sprite data: 
    * override head direction
    * head in front of torso 
* editor: no way to inspect torso data after written.
* save and load data functionality.
* generalize to gun
* fix smg and shotgun head positioning
? prevent invisibility for some objects
? UI: draw a circle for inaccuracy? cone?
* disable run in aim mode
* crack is black
* crouch graphics are wrong
* rotation orientation issues
* sphere walks on people
* don't shake camera when shooter is not player
* reloading for animated character
* searching AI hears gunshot?
* wallpress orientation is wrong
* head looking in correct direction
* muzzle flash when looking head-on
* look toward noise
* AI does wallpress
* aim mode start from lookat
* look around while walking
* head on a swivel 
* transition back to patrol
* head behavior changes with AI state
* handle the case when multiple gunshots are heard repeatedly.
* crawl animation slower
* new idea: instead of stickiness timer, in crouch mode, input just makes the character slew toward direction.
* we never noticed the weird turning effects because it was never possible to turn in crouch mode.
* subtly aim up & down
* smoothly interpolate between left and right focus points.
* narrower field of view and further distance
* ensure torso bob is correct
* wallpress head sprite is messed up
* wallpress left/right is weird
* head position when crouching in wallpress is wrong
* head position when laying on floor is wrong
* wallpress when crawling
* slower turn radius when crawling
* only rotate when moving while crawling
* make crawl nonuniform speed
* camera wall clipping
* crouch, crawl sounds
* z-fighting between torso, legs, head
* character hurtable
* blood splatter on hit
* scale blood splatter random
* blood splatter
* fix unlit billboarding
* look direction not working
* blood particle effects
* ejected in the direction of the bullet
* blood splat on walls
* blood pooling
- hit reaction animation / graphic ?
* object pooling for particle effects
* corpse
* fix jump crouch sound
* VR environment
* crawl idle head position
* fix crouch gun animations
* put player audio source on a separate mix from other audio sources
    * support mixers in setupaudiosource
    * enemy gunshots louder
* hurtable impact
    * turn to face bullet
    * shake
* fix clearsighter
* verify that sparks still work properly
* verify that sphere robot still works properly
* graphics:
    * combat test arena VR
    * blood particle
    * death graphic
        * import spritesheet
        * define new skin components
    * corpse graphic
* AI: show question mark when startled by suspicious sound, look in directions
* AI: when in combat mode, pay attention to sounds
* in investigate mode, sounds should have much smaller radius
* head should look around when in search mode.
* crouching behind cover should be safe.
* visually indicate stealth / allow player to melt into shadows
* adjust stealth parameters until it feels like it makes a difference
* better aim mode: 
    * leave aim mode snap to isometric direction
    * get character out of the way of aim
    * find some fixed relation between distance and depth of field. ?
    * don't crawl in aim mode
* sparks on destructible walls
* guard can't see over midheight obstacle
* adjust walk animation speed with movement
* wallpress crouch
* wallpress crouch head visibility
* vertical offset when crawling in wallpress mode should be higher
* lock on:
    * draw lock radius
    * lock when enemy in radius
        * disable lock radius indicator
    * lock to closer when multiple enemies in radius
    * lerp in the lock indicator
    * configurable lock distance
* health display
    * display number
    * display pips
    * display empty pips based on full health
* increase resolution / font size for other ui elements
* lerp in autoaim circle
    * first time you pull the gun out?
    * circle comes in from outside
* position call-out
    * outline square
    * pull-in from sides?
* fix all danging action callbacks!!
    * smooth between different radii
    * lerp targeting reticle toward target
    * bigger aim reticle
    * square drops in on targets, stats appear in side 
    * ease the transition between lock and unlock
        * possibly, just make lock circle very transparent
    * gestural aiming with auto-lock
    * small text indicates size of autoaim circle
    * easier to see target reticle
* AI routine for reloading and racking?
* torso spritesheet has head included
* reverse normal / aggro heights
* don't do outline highlight if i am not the player
* blinking arrow indicator when switching perspectives
* perhaps a smoother transition to/from aim mode?
* TODO: configurable scale, possibly involve aspect ratio (not sure what this meant)
* death animation graphical glitch
* gibs awake clone
* pool the noiseobject
* use object pooling for audio sources
* to reset the NPC character:
    * reset ai machine state
    * reset hurtable state
     gun instance
    * sphere AI came back shooting
* when spawning an NPC, we need some scene references:
    * character controller: orbit camera
    * sphere AI: patrol route
* VR combat training
    * don't destroy on dead; recall to pool.
    * spawn new NPC some time after the first one dies, at a random point
* scenario manager: track the number of active NPCs.
    * when there aren't enough, spawn a new one
    * track the active NPCs: how? 
        * track the pool objects.
* eliminate poolobject?
* better reaction to hearing noise in search / combat when noise is not suspicious (?)
    * when i'm already startled, if i hear more gunshots, skip ahead to running toward / looking.
* if NPC is shot, prioritize looking in that direction
* camera:
    * over the shoulder mode
    * bug: left/right shoulder
* Better response to being shot
    * gunshots should be treated differently from other sounds 
        * could be a red status for a while 
    * calibrate gunshot sound radius sizes
        * rifle should be heard from across the map
    * everyone should stop and look in the direction
        * if they get shot, they should take cover
    * yellow ! indicator
* aim recenter cursor to center 
* tasklookAt returns running, should return success?
* VR environment: infiltration level
    * alarm times down
    * raise alarm
    * interact with level data 
* initialize NPC pool on level load
* radio indicator icon could be lower and bigger
    * if HQ supports dispatches, dispatch a strike team
* HQ
    * alarm sounds 
    * alarm activation
    * response team
    * stickier red status? somehow? combat?
    * don't radio for alarm if alarm is already active
    * there may not be an HQ in some cases.
* hearing gunshot when searching for gunshot resets the sequence
* don't do the run away from gunshot thing if alarm is sounding (the strike team ran away)
* lead strike team state
* follow leader state
    * watch different angles
*first pass: 
    * respond first to the last known position of the player
        * this location is reported
* radio reports site of last disturbance
* spawn strike team in states
* lead strike team state: navigate to last disturbance
* follow strike team state: turn head 45 degrees relative 
* point of last interest:
    * gunshot -> damage -> last seen player position
    * use the same logic in other state transitions
* squad movement
    * don't bunch up
    * don't get stuck on each other
    * follow-behind:
* match target speed
* HQ: 
    * when we start radio, open a ticket with HQ
    * then, take time to speak.
    * then, complete the transmission, close the ticket with HQ.
        * activate alarm
        * HQ text response
    * if the ticket has been open for some time and not closed, then send a search party
    * if the NPC is unable to complete the radio sequence, send a search team
    * report specific details: gunshots heard, taking fire
        * text shows NPC speech
        * HQ text shows response
        * delay strike team spawn
* radio HQ behavior:
* radio HQ when we've lost track of the player and want to downgrade the alarm
* NPCs shoot each other a lot
* people are shooting themselves
* when player is shot, interrupt our ability to shoot back
* when player is shot, stop movement for a bit and react
* bug: NPC above fails to complete respond to attack state
* another AI state to call in radio after attack if alarm is not raised
* suspicion indicator highlights should reflect alarm / disguise status.
* people are cancelling the alarm during active firefights
* very easy to shoot someone when they're distracted (they don't react appropriately)
* visibility indicator 2.0
* show alarm countdown somewhere
    * show alarm timer
    * ease in the countdown
* NPCs orienting in weird directions
* don't override location of last disturbance with our own gunshots
* bug: aim indicator in aim mode
* lock radius in aim mode
* bug: boxes in aim mode
* is inputmode being used redundantly with characterstate?
* bug: outline flip x backwards
* aim indicator in wallpress mode
* bug: jump to aim orientation is using player direction, not direction to cursor
* popout
    * fix orientations
    * fix camera in position 
    * move backwards to move out of popout mode
* silencers
    * affect sound
    * affect noise
    * affect muzzle flash
* louder / better footsteps
    * footstep audio volume should match noise level
    * NPC footsteps should be louder
* redo how footsteps work?
    * slower patrols
* occasional pauses in patrol
* better reaction to footsteps
    * when there is any suspicion, stop and investigate
* shoot in orthographic mode isn't aiming as expected
* reset strike team
* don't radio HQ if HQ is already being radioed
* change speed coefficient for strike team, some search states
* head looks around when standing in place
* NPC has better vision when they're specifically searching for you
* NPC has better hearing when they're searching for you
* more thorough search task
    * choose a second position?
    * track direction you were moving
    * NPC should see you in deep shadow when they get close
* laser
    * trip when player walks through
    * play sound
    * laser should reach to the other wall, or to max distance
    * visible only with special devices
    * possible to leave a gap in the lasers you can crawl through
* pop out from wall
* alarm systems
    * cameras
    * laser tripwire
* display countdowntimer in alarm graph overlay
* when alarm terminal is triggered, highlight in graph view
* object pooling NPCs is working strangely
* use "enabled" instead of alarmActivated
* radio HQ state is being weird, maybe because of selector
* when alarm is triggered, find route(s) to alarm terminals
    * if a route is found, highlight the path in the alarm view and activate alarm
    * highlight triggered alarm node in alarm grid
    * highlight alarm terminal in alarm grid
    * alarms can be routed through a common router to be disabled
* interaction of alarm grid and cyber grid
    * hacking disables alarm propagation
    * hacking disables alarm generation
    * disabling alarm propagation in progress disables alarm
    * possibly, the alarm terminal can be a physical object in the world that goes off
    * disabling camera makes it stop turning
* interaction of alarm elements and power grid
    * hacking turns off cameras
* laser grid and security cameras require power
* enemies still bunching up
* disabling power turns off laser grid
* disabling laser grid shuts off lasers, sounds
* disabling power turns off camera IR cone
* graph system:
    * [<<][ELECTRICAL][>>]
    * and these are buttons you can click
    * "none" overlay with buttons
* enable nodes after refreshing graph
* why guard not perceiving my footsteps?
* player callout
* laser grid
* NPC with pistol shoot
* hurtable state
* set tab color/graphic when selected
* set weapon highlight when selected
* laser grid not working
* save system:
    * reset gun instance on pool operations
    * allow independent level data
    * allow independent NPC data: this is a little harder 
* prereq: set up a title menu i guess?
* danger room
* spawning enemies
* select player loadout
* select enemy loadout
* new stage: infiltration
* enemy count
* why suspicion handler is weird?
* TaskShoot interval should be based on gun stats or else semiauto should have a cooldown timer
* reset gun state between levels
* reset hq records between levels
* crawl with gun
* blood spray
* proper formatted time stat
* show fail if fail
* victory conditions
* aim: fixed angular size
* multiple weapons
* proper weapon names
* better weapon graphics
* proper playerstate template / delta split.
* bugged gun display
* save VR mission between runs
* gun HUD
    * ammo display
        * it's a must that bullets slide into place.
        * also, spent casings fly off
* should be emptying from chamber
* lcd background 88/88 when pistol is 7/8
* bottom row zombie ammo? disabling the bottom row stops all the coroutines on the thing
* lerp out the leftmost ammo, lerp in the chambered ammo
* if on bottom rack, lerp out far right of bottom rack;
* configurable spawn interval
* don't eject shell when just racking gun
* don't eject shell when changing gun
* eject shell casing, not bullet
* display different ammo types
* interface for designing multiple VR scenarios
    * save / configurable VR mission
    * respawn interval 
* corspe graphic bugged
* change ammo pip image when switching guns
* selectable level alarm
* set weapon to none button
* broken cybereyes
* when alarm is disabled, don't let laser thing trigger it?
* save data with null weapon
* interface sounds
* cursor on title screen
* don't mouseover text
* spawn effect
* red screen edge flash when hit
* NPC pool too small or something
* configurable number concurrent npcs
* better shotgun
* NPC pool size is max concurrent NPCS + strike team size (3)
* overlay colors
* over the shoulder: 
    * orient more tightly toward the cursor.
    * hide cursor when in aim mode
        * possibly, always reorient cursor to middle of screen
    * fix some cursor issue around wallpress
    * don't use lock when in aim mode
    * character going all wonky during aim mode
    * leave aim mode cursor lock when victory screen
    * next: rotate player to look towards camera.
    * prevent looking too far down
    * recoil knocks screen up
    * sway
* level restriction not working
* make sure the overlays are working as intended.
* gun shooting interval
* clear suspicion data between runs
* better shoot and move inaccuracy
* bug: npc can't seem to shoot me when close
* bug: broken superjump
* when alarm is disabled, guards stand around
* overall, guards are not forming a coherent counterattack
    * they should be running toward the firefight and seeing the player more readily.
        * see more readily: high visibility is sticky.
        * running: adjust speed in appropriate conditional.
* new missions
    * fix mission modes for VR level
    * UI display something about victory conditions
* datastore can be hacked
* callout indicator over the target datastore
* VR mission controller identifies a datastore to target
* data download takes time
* repeat n times to win
* don't choose the same datastore
* infinite respawn of NPCs
* particle effect when data is stolen
* new missions:
    * a mission mode about stealth
    * kill x in y time, continual respawning
        * no alarm allowed?
* display some feedback about victory conditions
* more patrol routes
* UI sound for checkboxes
* when you zoom *all* the way out, camera shifts from being centered on you to being centered on the attractor
* display game mode info underneath mission type selector
* display information underneath sensitivity selector
* slow the zoom maneuver
* superjump:
    * jumpprep: kneel
    * land: kneel
    * land: change collider size
    * faster jump control
    * trail is behind player?
    * don't move camera during superjump
    * impact effect
    * impact decal
* clearsighter
    * make use of static objects. make use of slicing by y.
    * make use of invokerepeating
    * fix shadowcasting mode
    * pre-initialize the material controller cache.
    * should only update active ones
    * should only calculated offaxis distance for interlopers
    * issues with update    
    * issues with direction to camera
    * floor height dont hide anything below this height
    * allow "rooftop zones", like attractor, makes solid all renderers    
    * better object height cutoffs, don't hide things below or the lamppost.
* impact effects on superjump
* optimize:
    * sightcone on trigger enter
    * lightlevelprobe
        * run periodically
        * read async
    * bullets: use object pooling for spark fx!
    * allow interloper shader to be cutout shader
    * we could subsidise the calculation across many frames.
    * control over hierarchy, sub-renderers, which renderers to do in a consistent way.
        * hide NPCs
        * particle systems don't need to be affected
        * don't mess with radio indicators
        * texmeshpro
* refactor clearsighter
    * clearsight InvokeRepeating
    * clearsight OverlapSphereNonAlloc
    * clearsight don't update ceiling calculation when in the air
    * ceiling clearsighter shadowsonly
    * don't interact with NPC emotes
* add cyber support to VR level
* manual hack security camera
* shoot security camera
* spawned NPCs should count
* camera move speed when switching views
* armatek smg could have a more appropriate sound
* prevent extreme zoom maneuvers with lerping
* check on why certain objects have really large bounding lock box
* exclude sparks from bounding box
* corpse can be shot / exploded
* fix "guess it was nothing"
* investigate routine
* time out suspicion record
* when a skill check is required:
    * show the guard's skeptical face,
    * show the required skill check threshold
    * show the skill check happen
    * show the result
* how is a cutscene going to work?
    * interrupt player control
    * interrupt NPC control (could just set timescale to 0 for this one?)
    * take control of camera as well
    * zoom in to bound the two of you
        * or, pan camera over to the guy, pop up his dialogue with portrait
        pause time, flash information?
        a wiggling bar indicates growing suspicion: -cool- / play it cool / danger blinking text?
* spottedhighlight:
    * pulse the indicator
    * set line position accordingly
    * pulse material x offset?
* when player runs out of sight:
    * momentary hey!
        * if player comes back into view, resume walking forward
        * then start radio to HQ
* when player is moving around:
    * growing suspicion 
* indicate being spotted / commanded / interrogated
    * highlight player? player feet? draw dotted line?
* better detection / tracking when stop right there
    * moving around too much raises suspicion
    * moving too much, moving too quickly, can trigger guard entering holdup mode
* holdup mode between "stop right there" and blasting
    * point gun and high alert
* head / aim when time is stopped
* intruder spotted record -> suspicious persons reported
* hold gun up
* make alerted guard text red
    * indicate when the player is the target of suspicion
* ease the transition into dialogue menu
    * slow time quickly?
* dialogue options lerp in
* text scrolls up
* hide UI -> hide alarm indicator
    * maybe disable canvas?
* etiquette
* ensure that NPC is close to player before opening dialogue
* two interrogations at once:
* if the player is not visible, run to last location
* if player is suspicious, stop and yell.
* if player is not visible, yell and run to last position.
* fix radio to hq now
* sfx
* color [success] [fail]
* portraits
    * configurable head
* if in radio to HQ mode and we see the player, drop the call ....?
* interaction between dialogue menu and aim mode.
* better player spotted highlight dashed line art
* make handgun interval more sporadic
* make player suspicious throughout manual hack process
* color of highlight line
* new graphics
    * redraw cyberdeck
    * redraw c4
    * investigate graphics
        *portrait for player, woman, man
    * ID card
    * thermal goggles icon
* performance tuning:
    * ammopips and 
    * suspicion handler
    * raycast vs. raycastall in sightcone
    * Physics.OverlapSphereNonAlloc vs OverlapSphere
    * RaycastNonAlloc vs. raycastall
* npc notices bodies
* ID card
* npc notices bodies
* firefight performance: lots of instantiate?
* stun when escape
* leave corpse state if gunshots heard etc.
* preset scenarios
    * support save and load
    * seoarate dialogue for that? or inline in a drop down?
    * create several presets
* line of sight detection: using RayCastHit[1] might yield false positives because it does not detect the first hit.
* ammo pips are broken!
* music
* preset scenarios
* dialogue
* save state overhaul
* enable 711 level
* enable office level
* player bugs:
    * player is corrupting defaultMission.json
    * standalone is much brighter
    * clearsighter doesn't work
    * ammo pips grow out of control
    * scenario pickers don't scale
* model:
    * nystreet wall: roll shutters, graffiti, etc
    * large wall
    * tall fence with barbed wire
    * inverted cylinder for skybox
    * buildings for skybox
* adjust patrol routes, make a scenario with fewer guards
* broken interrogate
* broken cyber hack objects
* adjust destruction timer on all walls
* 7/11 mission
* assault -> timer
* remove jack that data
* adjust names
* shotgun rampage
* garbage collection in clearsighter routine?
* wallpress, aim messes up clearsighter
* 7/11 rooftop is being weird
* 7/11 has some things outside normal clearsighter
* clearsighter:
    * fade in behavior
    * apply shadows better
    * better ground exclusion
* 7/11 hack support
* allow saving null for gun slots
* fix up sphere and NPC alert sizing and positioning.
* fix sphere AI 
    * big / misaligned alert handler
    * can sphere robot reload?   
* restarting missions is broken
* enlarge office level
* finish up 7-11 level
    * enclose level
    * finish skybox
    * destructible wall destruction timer
    * fix sphere robot
    * remove doors for now
    * visibility through windows?
* saved prefab VR mission templates
* NPC reacts to corpses
    * show some sort of gun stats
* reenable focus zone in 7-11 map
* poolmanager is unloaded?
* lots of garbage collection in clearsighter
* create good templates
    * shotgun rampage
    * basic combat in infiltration
    * steal the data in infiltration
* allow change npc outfit
* smg / rifle shoot animation
* why do gibs fall through the wall/floor? (probably because they are childed to parent?)
* weird gibs situation with bullet impact
* disable lock-on in aim mode?
* why do gibs fall through floor?
* camera clips through wall in wallpress, in aim
* strike team spawning screws up NPC spawning
* blood particle impact vs sparks particle impact
* better clearsighter culling
    test all levels
* crouching is slightly above ground.
* escape - quit menu.
* NPC can't see me when i'm standing behind low cover?
    * could it be the shadows?
* NPC investigate routine
* NPC reacts to corpses
* NPC speeds a little more when pursuing player.
* shooting at crouching guard
* pop-out should not move camera as much
* fix VR mission tabs
* hide third tab if HQ alarm is not enabled
* don't allow third weapon if third weapon slot is disabled
* create VR mission title display
* unable to detect shooting player, on rooftop
    * player can stand at distance and shoot approaching NPCs with impunity
        * do a sight check immediately on shoot, bypass visibility.
* light levels generally low
* more lights in interiors
* the crawling around a body effect comes from boids avoidance
* NPC reacts when seeing another shot
* discovering a body should register suspicion record even if no HQ present
* wallpress breaks normal aiming
* popout aim through player
* shooting at guys in 7-11 is broken?
* wallpress aim at player
* rifle / smg shoots weird
* NPCs have sticky gun
* shell bounce
* aim mode fixed angular inaccuracy
* update stored vr templates
* in standalone build, billboard sprite has weird issue
* in standalone build, possibly encountered a template load issue
* in standalone build, textmeshpro size very small
* guards interrogate, then interrogate again
* lots of "i guess it was nothing"
* automatic shooting is weird for seburo smg
* terminal broken
* crouch + hack
* hack radius is smaller than wire reach
* hack write should crouch with player
* better UI for hack feedback
    * bigger, keep with overall style
    * doors
* attack surfaces
* place doors in level
* build AC vent
* dark background for objectives holder
* wire up success -> FinishMission after action
* wire up after action report -> main menu
* wire up death -> FinishMission fail menu
* wire up retry -> reload mission
* wire up replan -> main menu
* victory: after action report
    * show objectives
    * show reward
    * show text
    * button for done -> return to mission select
    * guards on patrol
    * patrol back and forth
    * lively patrol
        * patrol type is controlled by template
    * camera should be more visible
    * set up networks
    * wire up alarms
    * Mission, not VRMission
        * no VR objective display
    * key in the grass
    * roof zone
    * set up objective
        * steal the data
        * show objectives when one is completed
        * show objectives when level starts
        * show objectives on pause screen
    * log when objects change
    * log when objectives complete
    * extraction zone
        * highlight the extraction zone
        * pulse the extraction zone, use text, use arrow
        * maybe a cutscene?
* after action: objectives
* change "details"
* (Clone)
* set activemissiontemplate on computer open
* change title text on different tabs
* dont show tertiary slot when not unlocked
* retry and replan/start is broken 
    * UI does not load
* move key to be visible
* map gen util
    * store multiple per floor
    * store metadata
* sounds for clicking level up/down zoom in/out
* sounds for clicking on column
    * support floors 0-9, remove nulls
    * populate markerData:
    * columns:
        * containerTransforms
        * columbButtonPrefab
            * columnButtonController:
            * columnButton callback
    * decor:
        * stair up
        * stair down
        * stair left
        * stair right
        door
    * jump to point on map
        * ping the point
    * preserve marker state when switching levels
    * indicate selected insertion / extraction
    * make icons: lightning bolt, arrow
    * start with insertion / extraction selected
    * indicate floor
    * door decor goes on all doors
    * indicate glass walls somehow
        * another layer, visible only to map camera.
        * can be used to indicate map boundaries.
* fix laser 
* tab icons
* mission fail display is a little wonky
* objectives
    * data icon
* fix weird map marker offsets
* support select insertion / extraction
* use extraction / insertion idn when initializing level
    * handle default value properly
* retry plan results in insertion / extraction being unset
    * tactics
        * cyber attack
        * purchase disguise
        * purchase fake ID / spoof keycard
    * support buying
    * icons for different tactics
    * available tactics set per mission
    * store which tactics are bought
* character breathing / animation
    * tune the pulsation
    * head looks around
    * torso changes in response to weapon selection
* item select
* overview
* clean up the optional objectives divider in mission selector
* allow switch to 0 item
    * hide UI handler in that case
* screen wobble on tab schange
* extraction / player spawn configuration automatically sets values on map marker. or is map marker?
* move spawnpoint to be visible on map
* cursor on mission UI
* indicate selected weapon / item slot
    * open the picker when a slot is selected.
    * close it when something is picked.
    * bleeoop open - short close sound
* abort -> show extraction zone
* handle mission fail
    * when datastore is destroyed
    * reaching extraction zone -> fail
* sphere robot
    * NPC template should allow sphere? different spawner?
* don't destroy the floors
* wall off the limits
* blinkenlight:
    * start big, fade out
    * random period offset
    * ideally, some glow, inner white, outer halo, etc
* hide overlays in aim mode
* why do attack surfaces start out highlighted?
* why do we start with gun out but no suspicion?
* footstep threshold could be higher?
* tab to hide burglar 
* tab should not open burglar with c4
* after popping a door open, use should not close it, it should open it
* navigable chair
    * same treatment for:
    * wastebasket, etc.
* interloper: not just center between me and camera, but center on one side of plane defined by camera isometric rotation
* tighten up crawling
* crouch should not immediately go to crawl
* burglar tools cause suspicion
* c4 should crouch, place time
- enemies are spotting player somewhat easily
- can we remove NPC json converter?
* carpet sounds
* interloper shader casts full shadow: hard
* strike team was not being dispatched in infiltration
* auto-use key in door
* don't shoot corpse away
* credstick surfing
* load screen (black)
* clicking on overlay shot gun
* fix camera position in wallpress mode when near edge
* NPC reacts when seeing bullet impacts
* NPC reacts when seeing another shooting
* the problem with the outline color red / green / blue is that base colors are how the shader determines which color to use ?
* laser tripwire
    * laser grid don't trip when NPC walks through? disable temporarily?laser grid
    * goggles create tint
    * minimap
    * UI: gun wireframe in lower-right corner.
    - blink cursor when reaching maximum aim
    * larger mouse cursor, with color
    * indicate alarm terminal more clearly!
    * indicate when alarm teminal is active!
    * could be a lot more efficient if things are addressable by position in space.
    * apply shadows to interloper shader
    * hiding corspe interlopers
        not interloper, but hide above.
    * click to shoot
    * orient toward shoot direction
    * fix rocket aim
    * rocket launcher graphic and visibility should belong to item handler
* door should be destructible
* burglary tools
* rocket launcher
* grenade
* SpottedHighlight should use full navigation path
* lose disguise when openly aggressive, or identity is revealed
* delay after death before fail screen
* half-width walls
* basement stairs -> first floor
* power mains in the basement
* brick 2
* brick half
* light interior
* place cameras
* place lasers
* flickering windows
* pylon light
* hide the key above
* attack surface disappears
* adjust skybox heights: can skybox scale with y more rapidly?
* faster fade in / out
* adjust clearsighter interval
* do not highlight interactives when player is above
* attractor zone in building
* chair, power mains
* BURGLAR highlights are visible across all levels
* build rooftop zones
* NPCs
* player spawn points
* generate map data
* disable skycams when in normal camera mode
* blood pools should hide
* shells should hide
* cameras should hide
* cameras should not hide that much!
* railings
* interrogate distance?
* remove sphere
* alarm box hide
* laser block hide
* guards do not navigate to correct floor position
* guards getting stuck on double doors'
* guards should be moving through the building more quickly
* searchDirection is not quite right
* maybe too much bunching
* a long way to travel means guards give up too easily
* set up objectives
    * randomized placement of paydatas
* loot
* use ID status
* concoct one lie per suspicion against player
* both knobs should refer to the same lock
* randomize deadbolt
    * remove lock from door locks
    * disable deadbolt elements
* make sure networks are working properly 
    * remote hack
* enhance readibility:
* clearsighter interaction with renderers
* move hack indicators to top
* screw turning
* head when crouching
* right click -> aim first has screwed up orientation
* crowding investigate state
* attack surface becomes visible in clearsighter
* rattling door
* handle picking / manipulating unlocked
* floating head syndrome
* self-closing isn't working for NPC
* dialogue
* crawling suspicion
* floor can be shot away!
* better display of paydata, and loot
* hacking suspicions should last
* slide in from right
* only show when something changes
* objective status
    * highlight changes
* guard notices disabled / tampered door
* guards should investigate the site of a tripped alarm
* strike team should come in with a purpose
    * investigate the last position
* limited number of guards spawn
* don't dispatch multiple strike teams
* don't do multiple investigate cutscenes at once - if alredy under suspicion, just add into the fray
* what about extra-height camera in basement?
* screws are still backwards?
* disable alarm terminal should work (disable radio?) levelHQTerminal()
* guard gets stuck in hallway.
* ensure suspicion indicator is working correctly
* easy for guard to lose sight of me in investigate
* investigate cutscene, dialogue, and burglar canvas
* "outsideattacksurface"
* NPC text more readable
* little icon rises up when grabbing loot
* NPC and doors
    * NPC shouldn't leave door unlocked
    * NPC and lock interaction
* camera / laser trigger should bring nearby NPC
* window graphic
* set invisible walls
* lots of reporting the same door / corpse
* fall damage
* guards above should disappear
* gun + hand = floating head
* click outside burglar menu to close
* screws still wrong at times
* better way of putting a tool away
* paydata broken
* cameras on map marker
    * screwdriver graphics
    * interface:
        * tools are placed on the spread to the right
        * clicking on the panel in general replaces item, returns to hand----
        * suscpetible / not to latch attacks
        * picking more / less difficult
* put a light on the roof
* rocket passes through window
* wire up lights to power
* better loot sfx
* camera sound
* email text scroll faster
* disable disguise
* i was unable to complete either mission.
* active tactics empty bulletholes
* apply temporary suspicion when a camera / laser is tripped
* cancel music on mission end
* fix data objectivees 
* if in escape point when abort, end mission
* rearrange mission plan
* finish menu text & scroll same as mission selector?
* security description too long in tower
* dont show completed missions in selector
* fill out proper texts
* chainlink fence door    
* alarm terminal triggering effects
* notify others of location
* investigate NPC walked up to me in the dark and then left.
* ESC when in apartment
* ESC in mission plan
* ESC in mission select
* jack that data starts you out in view of patrolling guard
* clean up loot and credsticks and keys
* skybox buildings
* hide ui in world mode
* when NPC runs, show run animation
* transition between apartment and street
* broken clearsighter on 
* broken cutscenes?
* multiple audiosources
* show interactibility on world mode
* highlight is broken on apartment -> street
* start with correct skybox
* objectives indicator in world mode
* start apartment / world with different rotation
* a bar
* bar stools
* table
* chairs
* weapons dealer:
* industrial shelving
* industrial containers
* more trash, random grime
* decor: replacing the spritesheet is hard.
    * if we do it programmatically: set the spritesheet and index in a script.
* make
    * guns for gun shop
    * item shop
    * akira alley
* use allGuns in loadout editor
* main game loop
    * save / load game data
        * choose filename
        * create new save file:
            * set gamedata: new gamedata. set filename.
            * save gamedata to disk
    * load game:
        * show existing save files
        * choose one
            * set gameData
            * jump to apartment
    * save game:
        * serialize gamedata to filename
* GameData has filename field
* save game on level exit
* track playtime, last played
* reset timeplayed on newgame, load
* save game from menu
* sort load menu by last play time
* mission fail: jump back to apartment
* set player name field in dialogue
? serialize lists of references
* items not making it into mission
* hide tertiary slot in loadout editor
* initialize level plan using items, guns from gamedata
* display image or text when saving
* load -> mission controller is broken
* extraction point is out of bounds
* regenerate jack that data map
* move key from tower rooftop
* plant material is glitched
* fix steam page and announce it
* test loot shop with some loot in inventory
* seller info
* loot preferences
* sell action
* grouping
* show "nothing to sell" if nothing to sell
* hide type icon
* make preferences take effect on sell value
* combine multiple loots into one button
* make global market factors
* basic floor 2.25 needs to be fixed.
* break dialogue into its own controller
* adjust speech text visibility based on distance
* some who spawn stick around in zone
* disable lock-on in world
* randomize movement a little bit
* don't hide heads
* talking sprites for head graphics
* floating chair




graphical issues:
    smg torso face left, head face down looks odd
    female walk left / right torso offset is incorrect?

uncertain:
    less intense wall sticking?
    creep button (crawling is?)
        slow walk?
    apply skin graphics to corpse?

nice to have / future goals:
    ambient sounds
        room tone
    first level should set the tone
    aim: swing into position, then subtly zoom in to focus on reticle
        accompanied by rotating reticle element
    impact knockback
        slide, kneel, get up?
    fix bullethole prefab / material / decal system 
        allow different materials or different prefabs accordingly
    glass break fx
    leaves and junk in the street that blows around
    off-screen indicator for active threats?
    pixel perfect shaders
    animation shows recoil
    head look around if player has been idle
    make elevator
    if an NPC sees another NPC shooting at something, look / search in that direction
    NPC better take cover
        move into another room
    HQ will be level specific state:
        HQ might be disabled if player assaults it
        what to do if there is no HQ?
            run to the alarm panel if there is no HQ
                do nothing if there is no alarm panel
            how to decide who to run to alarm panel?


    dust / smoke shader
    digitized voice for "operation jetlag"
    highlight item container when item is switched
    after passing a lie check, npc discovers body: reconsiders player status
    sphere robot might not investigate?
    performance tuning: separate canvases, implement octree or smth

deep save system:
    serialize the complete level state

strike team
    when one is alerted, all are alerted?
    solution for total level wipe of NPCs
        reset strike team count when one dies?
        if you've killed everyone, more arrive? <-- this
    search level systematically
        ideally, move and clear room to room.
            possibility 1: generate room and door mappings automatically
            possibility 2: mark up rooms in unity editor
        possibility 3: a patrol route that leads through the level?
        all possibilities require some extra level work

graphical embellishments
    small font text near locked-on character
    arcs swing about lock size indicator
    callout:
        extended mode callout on level start vs quick callout on display changes 
        text? 
            PLAYER: STATS
    pulse some element in color in alarm timer, maybe show some bkg
        blink at 00.00 and then ease out
    switching items graphical effect
    easing in overlay 
    more blink-style transformations
    show thermal goggles on player head?
    fog of breath
    reflective puddle

UI:
    adjust all UI buttons to have consistent semantics for Cancel / OK
    display different UI when in aim mode?

    aim lock stats system 
        scan time 
        retain stats after breaking lock up to N 
        small health bar 
    weapon wheel
    better clarity around alarm logic
        fix edge coloration from active node to alarm terminal

control / combat:
    controller support
    headshots
    shoulder switch is a control
    aim sway responds to movement and gun skill
    bullets that can pass through targets
    armor & armor piercing
    modernize some controls:
        weapon / item wheel
        click to select interactive surfaces without selecting burglar tools.

sound
    ambience
        room tone in internal spaces
        distant traffic sounds

stealth:
    silencers affect graphic
    more / better sequences besides alarm / no alarm; search level state.
    NPC should look in direction of last noise
    * NPC when an aggressive noise is heard, do a quick visibility check.
    stealth kill?
    be able to shoot out lights

VR mission designer
    player stats
    survive x waves of y NPCS
    inventory management

* better action log (remove?)
    blit the text
    font?

clearsighter
    we want to disable shells when they're newly produced, but hide them when they're static.
    clearsighter optimization
        1. restrict computation to only the visible
        2. octree

code-controlled shoot animation
    fix shooting animation and automatic interval
    faster shotgun
        click to rack faster?
        raise - shoot - pump
        animator speed can be adjusted

skills
    gun skills
    speech skills
    lockpicking skills

nimrod for texts

weapons
    colt 2037 sped up sounds great
    attachments
    laser pointer attachment
    flashlight attachment

planning mode
    optional objectives
    HP / def indicators
    * mission select map
        * indicate a point on map
        * move map, zoom
    on mouseover picker: change stat viewer
        smooth rolling stat bars when values change
        compare stats +/-
    mission plan mapview 
        support multiple scenes per level
        disable selectors when necessary
        markers gated behind tactical data
    tactics pane
        purchase keycard
        activate cyberattack
        clickable active tactics show description
        buy info
            locate key objectives
            locate key items
            locate traps / sensors / weapon emplacements: intel
            locate guards / patrols / security operations center: intel
            learn info to be used in dialogue
            discoverable networks
        when map data is bought, show notification on map tab

minimap
    * multiple floors of map
    orient relative to main camera
    highlight enemies in red
        show sightcone
    indicate player


UI
    adjust all UI buttons to have consistent semantics for Cancel / OK
    remove action feed?
    show iconography when disguise is lost
    show iconography when optional objective is complete

does VR mission still work?
    hack target ! indicator only sometimes visible
    NPC portraits not being set properly

level state
    normalize level / mission / state / detla / template
    gun state can be moved into plan
    HQ state can be moved into delta


a guy danced on a corpse (I think he was investigating a noise?)


---------------

NPC tuning:
    when you can't reach the player (navigation fail) don't just walk away
    NPC sees destroyed cameras
    adjustable NPC difficulty
        guards reacting to your shooting are too fast on the draw?
        guards shoot you immediately when you become visible?
        getting shot resets your aim too hard?
        how quickly acquire target
        accuracy
        shooting behavior
            quickness, bursts

    guard HQ potentially notices disabled cameras and sensors
    strike team seems to have a hard time investigating repeated explosions
    guards get stuck in the narrow corridor
    guards should pause in patrol only not around other guards.

silenced gun is still OP
    seeing corpse or bullets -> high alert, easier to see player
anti-camping visibility boost
    guards are aware of your aggression 
    haven't moved in a while
    have shot more than once or twice?
damage result addition is weird
billboard interloper shader should be cutout, or something is up with interloper shader + shells

networks
    marching ants?
    better coloration
    clean up connections
        can we do this programmatically?
    get cyber network working once and for all
    DFS path finding doesn't quite work right for highlighting alarm path

optimizations:
    use octree in clearsighter
    optimize the ammo counter
        this could free up the equivalent of a whole camera render
    static batching / dynamic batching / occlusion culling  / gpu instancing

put gun away and left click on objects to use?
left click on people to talk?

clearsighter:
    it's a little less than ideal that things pop in in different order on levels: windows, then walls, etc.
    instead everything should be sliced into y intervals, and all deactivated / activated at once.

distraction needed
    throw a coin
using key in lock should spin the keyway
npc text can run off the edge of the screen

-------------
how to make it more difficult?
    1. try insert from steet, no disguise
    2. add receptionist
    3. add civilians
data stealing needs to be more clean and engaging
some computers trip honeypots
intel can tell in advance where the target data is. 

code-controlled gun animation
attack surfaces
    more door styles
        different handles
        electronic access control
    alarm sensors on doors
    padlock
loot
    guards can drop keys or loot
    some data is useful in social engineering
    some data provides keycodes

dialogue
    get once lie stratagem per mark from player
vehicles
    strike team may arrive by vehicle
    exfiltration / insertion may be by vehicle
navigable AC units
    you should be able to crawl through the duct on the ceiling

rocket launcher explosion?
hand grenade explosion
    hand grenade sound??
check blood pool prefab pooling
destroyed walls leave decal on the ground (difficult?)
destructible light pylon
destructible dumpster
destructible AC unit
destructible radio dish tower
plants can catch on fire

level 3:
    holes for AC ducts 
    elevator

randomly place lasers
randomly place cameras

doors
    can open from the inside
    different knobs?
    sometimes unlocked

better network readability
    needs slicing by floor
    highlight connections when mouseover
    node discoverability?
    popup box: visibility skill gives you percentage breakdowns of possibilities:
        50% honeypot
        50% paydata
    floppy icon for unopened data nodes
    a separate screen?

loitering is suspicious but not near a water cooler

-----------
build a test level, 3 storey building infiltration
    vent into the side of the building
    vent into access into basement
    populate various other datas, honeypots
build a test level equivalent to Jack That Data
    make level more challenging
        turrets
        camera view bigger
    hatch in the rooftop

graphics
    patrol guard spritesheet
        * smg
        * rifle
        * shotgun
        portrait
    disguise spritesheet (fireman)
    swat team spritesheet
        smg run
        rifle
        pistol
        shotgun
        wire up sprite data system
    scientist spritesheet
    civ_female portrait could use some work
    title screen logo
    title screen animations 
    helicopters for skybox
guns:
    silenced pistol
    fix silenced smg
icons:
    redraw others?
        thermals
padlock
disguise tactic icon
fake id tactic icon
random loot spots
loot drops

guards spawned invisible
some sort of automated check when a level starts if objectives are impossible

a new component like SphereRobotAI
uses a state machine and states
uses waypoints in the world
loot popup is not popping up
unify regular + metallic material
eliminate cyber_obj_2 material

fix broken loot items

mission:
    visibility goes too low
    guards get stuck on each other
        make NPCs pass through each other with a soft bump
    swat spritesheet
        this requires sprite datasystem work:
            1. positioning torso relative to legs (maybe?)
                position head relative to torso 
            2. work on editor
                updating values when they're updated in the editor? somehow? yes/ no?
    trees / plants / outside decor





locations:
    * weapons dealer
    * bar (the gentleman loser)
    software dealer
    hardware dealer (the finn)
    street doc
    night club 
    arcade?

world NPCs:
    potentially talkable: leave that for later.
    moving with purpose around the scene. 
        up & down streets.
        in & out of stores.
    stopping and talking with each other.
    some are loitering
        loitering on the street corner
        leaning up against the wall
        hanging around the Fire
    random drug dealers on the corner will buy your drug loot

still unknown:
    street doc
    weapon upgrades
    software
    hardware

world layout:
    * neighbor building?
        * items: could work
    * underneath apartment:
        * weapons
    * akira alley:
        * drug dealers will purchase your drug loot.
    upstairs:
        importer / exporter who buys things.
        also he is a connection that will give you tips or sometimes a deal.
    bar:
        * the bartender will clue you in on the price of commodities.
        there is an underworld figure in the corner of the bar who will give you missions.
    subway:
        a software hacker 
    tent city:
        a randomized junk shop

shop todo:
    gunshop
        show little -100 text goes up from credits, lerp credits color from red to white
        sell mode
            can't sell last gun? maybe?
    item shop
        description (dialogue)
            "1x per mission"
            "unlimited use"
        grey button when item view player
        don't sell items player already has
    bartender
        rumors -> faction strength


graphics:
    we need more large, imposing, concrete style buildings
    tents
    pop-up tent
    sprite props
        knives / swords / shuriken
        ground wires
        ground decals
    bar curve
    subway entrance
    burned out car wreck
    neon signange
    graffiti
    6x6 dirt
    6x6 sidewalk
    neon lights
        neon ring around the signage name
        neon sign in the window
        "GUNS" sign
        how do i do neon?
            aesthetic 1: white light, red rim
            aesthetic 2: bright light, wall behind it is super red
    graffiti
        bört
        karmadillo
        lobster
        Emosido engañado
        franco
        no me baño
    https://twitter.com/scrudgey/status/1627911883952099329?s=20


* better scene load
* redraw talking sprite sheet so as to not interfere with override head direction sprite data.
* talking animation
    * triggered when talking
* billboard shader orientation can be set by camera direction?
    * orient sprite transform towards camera
* spawning should not cause lots of gun sounds
* enemies in level spawn with gun, or unholster gun ?


an NPC ran down the stairs towards me, got stuck, didn't see me.
an NPC saw me easily in the corner when he'd walked past me.
what happened to the sphere robot?
tower walls are broken in clearsighter
clearsighter hide interlopers
enemies hear me easily from below?
on level start, zoom out from player spawn
    show span cutscene
AI still had a hard time closing in on me when i was openly shooting and running around
maybe fall damage from rooftop should be greater
better interface for interacting, hacking
UI between title, shops, planning is different from UI, pause menu
    inline & bkg colors, buttons
clearsighter
show objectives as blit-in text on lower left?
    show dayss
"v" and "^" buttons on scrollbars?

new game: 
    ensure none already exists
    ensure filename nonempty
    random name?
email french guy
create all shops
fix vr missions
fix broken save
upgrade unity
make a build

prevent guns in world
prevent damage in world?
storeowner AI
    move to position
    look in direction
    look at player
    different from SphereRobot, but still uses a state machine.

upstairs importer exporter
mission guy in the bar

all shop UIs that are about buying / selling should share as much common interface as possible.

randomize path?
    nudge path vertices?

linger in bar:
    move to open spot on the bar and get a drink
    move to a seat
linger in item shop
    make item shop more like a bodega?
linger in alleyway  
    knife fight

more randomizable NPC
    random selection of head, torso, legs
    sometimes, torso + legs are set dependently.

cars 
buildings
NPCs can hold beer bottles
more neon
fix social group orientation
don't apply billboard rotation in wallpress
sound design